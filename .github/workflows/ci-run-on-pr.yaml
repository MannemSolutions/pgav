name: CI run on PR
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read

jobs:
  codechanges:
    runs-on: ubuntu-22.04
    outputs:
      backend: ${{ steps.filter.outputs.backend_any_changed }}
    steps:
      - uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # v4.0.0
      - uses: tj-actions/changed-files@e9772d140489982e0e3704fea5ee93d536f1e275 # v45.0.1
        id: filter
        with:
          # Any file which is not under docs/ or is not a markdown file is counted as a backend file
          files_yaml: |
            backend:
              - Cargo.toml
              - src/**
              - .github/workflows/ci-run-on-pr.yaml

  check:
    name: Check
    runs-on: ubuntu-latest
    if: ${{ needs.codechanges.outputs.backend == 'true' && github.event.pull_request.draft == false}}
    needs:
      - codechanges
    strategy:
      matrix:
        rust:
          - stable
          #- 1.31.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    if: ${{ needs.codechanges.outputs.backend == 'true' && github.event.pull_request.draft == false}}
    needs:
      - codechanges
    strategy:
      matrix:
        rust:
          - stable
          #- 1.31.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    if: ${{ needs.codechanges.outputs.backend == 'true' && github.event.pull_request.draft == false}}
    needs:
      - codechanges
    strategy:
      matrix:
        rust:
          - stable
          #- 1.31.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: ${{ needs.codechanges.outputs.backend == 'true' && github.event.pull_request.draft == false}}
    needs:
      - codechanges
    strategy:
      matrix:
        rust:
          - stable
          #- 1.31.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Install clippy
        run: rustup component add clippy
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  integration:
    name: Integration tests
    runs-on: ubuntu-latest
    if: ${{ needs.codechanges.outputs.backend == 'true' && github.event.pull_request.draft == false}}
    needs:
      - codechanges
    strategy:
      matrix:
        rust:
          - stable
          #- 1.31.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: update to docker-compose v2
        run: |
          sudo apt-get install -y curl
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: compose
        run: |
          docker-compose --version
      - name: docker-compose-tests.sh
        run: |
          ./docker-compose-tests.sh
